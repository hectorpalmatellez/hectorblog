<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: aprendiendo | Héctor Palma Téllez]]></title>
  <link href="http://hector.palmatellez.cl/categories/aprendiendo/atom.xml" rel="self"/>
  <link href="http://hector.palmatellez.cl/"/>
  <updated>2013-03-29T15:49:42-04:00</updated>
  <id>http://hector.palmatellez.cl/</id>
  <author>
    <name><![CDATA[Héctor Palma Téllez]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Jekyll es el núcleo]]></title>
    <link href="http://hector.palmatellez.cl/aprendiendo/jekyll/"/>
    <updated>2013-03-21T20:55:00-04:00</updated>
    <id>http://hector.palmatellez.cl/aprendiendo/jekyll</id>
    <content type="html"><![CDATA[<p><img class="left" src="/images/jekyll.png" width="280" title="Logo de Jekyll" alt="Jekyll logo"> Como dije en <a href="/aprendiendo/octopress/">el primer post</a>, había <a href="http://ajipirijou.com/blog/ahora-usamos-jekyll" title="Artículo de @elJOjo cuando se pasó de WordPress a Jekyll">leído sobre Jekyll</a>, pero nunca llegué a entender de qué trataba realmente o cómo se hacían las cosas por dentro y resulta que <strong>hay haaaaaarto diferente a Octopress</strong>. Es más abstracto aún, por lo que necesitas +10 puntos de coeficiente intelectual que para entender Octopress.</p>

<p><img class="left" src="http://www.your3dsource.com/images/redhandpointingdown.gif"> Como sea, me di el tiempo para entender lo básico como para echar a andar un sitio simplecito con Jekyll en base a un par de tutoriales, así que acá dejo mis impresiones.</p>

<!--more-->


<h3>Hay que estar preparado</h3>

<p>Si probaste Octopress primero y después pruebas Jekyll, luego de la correcta ejecución del <code>gem install jekyll</code>, encontrarás que tu carpeta escogida tiene <strong>nada</strong>. Hay que aprenderse, por lo tanto, la estructura de Jekyll que básicamente es así:</p>

<pre><code>[raíz]/index.html
      /archive.html
      /img/
      /js/
      /css/
      /_posts/
      /_includes/
      /_layouts/
      /_site/
      /Rakefile
      /_config.yml
</code></pre>

<p>La descripción sobre estos elementos a continuación:</p>

<ul>
<li>Así como en Octopress existe <code>rake generate</code> para regenerar el sitio de <code>source</code> a <code>public</code>, acá existe <code>jekyll --server</code>, que hace lo mismo, a diferencia que el <em>output</em> de la operación queda en <code>_site</code>.</li>
<li>Entre <code>img</code>,<code>js</code> y <code>css</code> repartí los archivos de <a href="twitter.github.com/bootstrap/">Bootstrap</a> que escogí para el <em>front-end</em>.</li>
<li>En <code>_posts</code> están los archivos en <code>.markdown</code> antes de ser generados como posts.</li>
<li>La carpeta <code>_layouts</code>, al igual que en Octopress, guarda los <em>layouts</em> de publicaciones que uno genera.</li>
<li>En <code>_includes</code> dejé todos los archivos que reutilizo cada vez que genero una página, como:

<ul>
<li>head.html</li>
<li>header.html</li>
<li>footer.html</li>
<li>Entre otros.</li>
</ul>
</li>
</ul>


<h2>Recursos</h2>

<p>En <a href="https://pinboard.in/search/u:hectorpalmatellez?query=jekyll" title="Recursos sobre Jekyll">mi Pinboard</a> estoy guardando todo lo que encuentre sobre Jekyll. La mayoría de lo listado acá lo he ido implementando de a poco en el proyecto que estoy armando, que todavía no haré público, hasta que se vea decente.</p>

<h3>Agradecimientos</h3>

<p>Gracias a <a href="http://joselbornoz.cl">@elJOjo</a> por su tiempo explicándome por correo temas conceptuales que me han servido harto.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Custom fields o campos personalizados en Octopress]]></title>
    <link href="http://hector.palmatellez.cl/aprendiendo/custom-fields/"/>
    <updated>2013-03-19T02:00:00-04:00</updated>
    <id>http://hector.palmatellez.cl/aprendiendo/custom-fields</id>
    <content type="html"><![CDATA[<p>La pregunta que se me ocurrió era como:</p>

<blockquote><p>¿Y cómo creo campos personalizados para hacer más bonitamente dinámicas las publicaciones?</p></blockquote>

<p>Resulta que un poco de lógica y varios intentos de <em>googleo</em> me llevaron a intentar algo parecido a lo que sale <a href="https://github.com/mojombo/jekyll/wiki/yaml-front-matter#custom-variables" title="YAML Front Matter en GitHub">acá</a>, en el apartado de «variables personalizadas» se explica con el siguiente ejemplo:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Ejemplo  (custom.rb)</span> <a href='/downloads/code/custom.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">title</span><span class="o">&gt;</span> <span class="p">{{</span> <span class="n">page</span><span class="o">.</span><span class="n">title</span> <span class="p">}}</span> <span class="o">&lt;</span><span class="sr">/title&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<!--more-->


<p><img class="left" src="/images/campo-customizado.png" title="Ejemplo de campo personalizado" alt="Campo customizado en el header del archivo markdown"> Así que decidí probar un poquito y creé <code>customizado</code> en el encabezado del archivo .markdown
El paso siguiente es hacer que desde la plantilla pueda ser visible, para esto hay que ir a <code>source/_layouts/post.html</code> (porque el layout que tengo para los posts es ese, obviamente). Eso se puede ver en la segunda imagen de este post.
<img class="left" src="/images/layout-customizado.png" title="Ubicación de donde se mostrará el campo" alt="Ubicación en post.html donde va el campo personalizado"></p>

<p>Entonces, los pasos se reducen a lo siguiente:</p>

<ul>
<li>Definir el nombre y valor del campo en el encabezado del artículo <code>.markdown</code>.</li>
<li>Editar el <em>layout</em> correspondiente para mostrar el valor del campo personalizado.</li>
<li>Queda opcional, obviamente, el estilo que se le quiera dar, por si le querís poner una clase.</li>
</ul>


<h2>Probando</h2>

<ul>
<li><p>Si el campo personalizado va a tener HTML, como para darle una clase o alguna etiqueta específica (cosa que también se puede predefinir desde el <em>layout</em>), el valor debe ir entre apóstrofos:
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Ejemplo  (custom-html.html)</span> <a href='/downloads/code/custom-html.html'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>customizado: &#39;<span class="nt">&lt;span</span> <span class="na">style=</span><span class="s">&quot;color: red&quot;</span><span class="nt">&gt;</span>las vacas son bonitas<span class="nt">&lt;/span&gt;</span>&#39;
</span></code></pre></td></tr></table></div></figure></notextile></div>
(Deben ser apóstrofos porque con comillas dobles no me funcionó. Quizás algún día sepa por qué).</p></li>
<li><p>El campo puede ser utilizado en el cuerpo del artículo como se hace en el ejemplo en Ruby usado más arriba. Tan simple como añadir lo siguiente entre el texto escrito:
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>customizado2  (customizado2.rb)</span> <a href='/downloads/code/customizado2.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">{{</span><span class="n">page</span><span class="o">.</span><span class="n">customizado2</span><span class="p">}}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
Esta es la razón por la que encontré más fácil llamar los pedazos de código desde archivos externos a escribirlos de la forma corriente en la que se escribe código dentro de un post.</p></li>
</ul>


<h3>ALGO TERRIBLE</h3>

<p>Todavía no hago funcionar los tags. Los agrego en cada post, pero quedan feítos. De ahí veo si los logro corregir de alguna forma más <em>kawaii</em>~</p>

<p>Eso nomás por ahora–</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Poblando el sidebar con asides]]></title>
    <link href="http://hector.palmatellez.cl/aprendiendo/asides/"/>
    <updated>2013-03-16T16:31:00-04:00</updated>
    <id>http://hector.palmatellez.cl/aprendiendo/asides</id>
    <content type="html"><![CDATA[<h2>¿Qué son los asides?</h2>

<p>Viniendo de la <em>cultura del WordPress</em>, siento que es acertado decir que los asides son como los <em>widgets</em> del sidebar. Espero que nadie se enoje conmigo por escribir eso.</p>

<p>Se guardan en <code>source/_includes/asides</code>, pero los que uno crea están en <code>source/_includes/custom/asides</code>.</p>

<p>Un ejemplo práctico es el widget del timeline de Twitter que está en el sidebar de <a href="/">este blog</a>.</p>

<!--more-->


<h2>Paso a paso hacia un nuevo aside</h2>

<p><img class="left" src="/images/octopress-files.png" title="Archivos de Octopress" alt="Algunos de los archivos de Octopress">
Si necesitamos añadir un <em>widget</em> que no ha sido agregado o no existe, basta con ir a <code>source/_includes/custom/asides</code> y crear un nuevo HTML con el contenido que queremos que se visualice.
<span class='pullquote-right' data-pullquote='Crear asides no es algo tan mágico, como este blockquote que es en realidad un span que no se puede seleccionar'>
 Crear asides no es algo tan mágico, como este blockquote que es en realidad un span que no se puede seleccionar
</span></p>

<p>Luego, en <code>_config.yml</code> en la línea <code>48</code> debería estar <code>default_asides</code> donde uno puede enlazarlos por nombre del <code>.html</code> que creamos.</p>

<p>Eso nomás es–</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Usando imágenes en Octopress]]></title>
    <link href="http://hector.palmatellez.cl/aprendiendo/usando-imagenes-en-octopress/"/>
    <updated>2013-03-15T00:08:00-04:00</updated>
    <id>http://hector.palmatellez.cl/aprendiendo/usando-imagenes-en-octopress</id>
    <content type="html"><![CDATA[<h2>La complicación</h2>

<p>Resulta que al intentar agregarle imágenes al <a href="/aprendiendo/octopress" title="Post sobre empezar a usar Octopress">post anterior</a> tuve problemas y sólo después de <strong>varios</strong> intentos caché que el problema era por un tema que creí haber solucionado al configurar el sistema por primera vez: <strong>la codificación</strong>.</p>

<!--more-->


<h3>Caracteres bonitos</h3>

<p>Los hispanohablantes tenemos caracteres bonitos, como la todopoderosa <strong>eñe</strong>, <strong><em>las vocales con tilde</em></strong> y la <strong>u con cremillas</strong> (ü). Estos caracteres le hacen problema al universo en línea cuando se meten en nombres de archivos y… en todo. Por eso, al configurar el repositorio donde alojes Octopress debes adelantarte, querido hispanohablante. Esto se hace con lo siguiente:</p>

<pre><code>export LANG=es_ES.utf8
</code></pre>

<p>Luego, para verificar que quedó bien, hay que darle a:</p>

<pre><code>locale
</code></pre>

<p>Si el resultado se parece a lo siguiente, estamos bien:</p>

<pre><code>LANG="es_ES.utf-8"
LC_COLLATE="es_ES.utf-8"
LC_CTYPE="es_ES.utf-8"
LC_MESSAGES="es_ES.utf-8"
LC_MONETARY="es_ES.utf-8"
LC_NUMERIC="es_ES.utf-8"
LC_TIME="es_ES.utf-8"
LC_ALL=
</code></pre>

<p><img class="center" src="/images/utf8-locale.png" title="Pantallazo al Terminal" alt="Pantallazo a lo ya comentado"></p>

<h2>¿Y entonces? ¿Cómo se hace?</h2>

<p>Luego de eso, podemos insertar imágenes, como la que está arriba de este párrafo. Para eso, hay que seguir lo que dicta el <em>plugin</em> que viene gratis dentro de Octopress desde su nacimiento. Esto se puede leer en <a href="http://octopress.org/docs/plugins/image-tag/" title="Explicación del uso del comando para insertar imágenes en el contenido del post en Octopress">su documentación</a>. Básicamente se trata de:</p>

<pre><code><img class="[clases asignadas]" src="/ruta/a/la/imagen" title="[ancho] [alto] [el title [alt de la imagen]]" >
</code></pre>

<p>Fueron varias horas metido en el problema, aunque debo confesar que para matar la frustración jugué un rato al <a href="http://store.steampowered.com/app/440/" title="Juego muy bonito y enriquecedor">Team Fortress 2</a>.</p>

<p>Eso nomás, por ahora.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress]]></title>
    <link href="http://hector.palmatellez.cl/aprendiendo/octopress/"/>
    <updated>2013-03-14T01:15:00-04:00</updated>
    <id>http://hector.palmatellez.cl/aprendiendo/octopress</id>
    <content type="html"><![CDATA[<h2>Cachando cómo usar Octopress</h2>

<blockquote><p>Es bacán.</p>

<p>– <a href="http://twitter.com/Kyuumeitai" title="Twitter del Álex">Álex</a></p></blockquote>

<p>Esa fue la primera opinión que escuché sobre Octopress, antes de eso ni cachaba que existía. Había <a href="http://ajipirijou.com/blog/ahora-usamos-jekyll" title="Artículo de @elJOjo cuando se pasó de WordPress a Jekyll">leído sobre Jekyll</a>, pero hasta ahí nomás entendía.</p>

<!-- more -->


<p><img class="left" src="/images/octopress.png" width="360" title="Pantallazo del proceso de este post" alt="Escribiendo en Octopress usando Mou">
Le estoy haciendo modificaciones, para entender bien cómo es la estructura de los archivos que componen el resultado final, lo que viene después del <em>rake generate</em>.
Aparte de eso, <strong>tengo que aprender a escribir en <a href="http://daringfireball.net/projects/markdown/basics" title="Artículo sobre el Markdown">Markdown</a></strong>, menos mal que <a href="http://mouapp.com/">Mou</a> ayuda harto.</p>

<h2>Investigación (o <em>googleo</em> común)</h2>

<p>Resulta que me molesta un poquitín que no se pueda traducir todo de una, ya que, si se cree tan bacán, Octopress debería tener algo para moverse con la <a href="http://es.wikipedia.org/wiki/Internacionalizaci%C3%B3n_y_localizaci%C3%B3n" title="Artículo en Wikipedia donde se explica qué es la internacionalización">i18n</a>. <strong>¿Por qué no tendrá un .MO y un .PO?</strong> Con <a href="http://www.poedit.net/" title="Herramienta usada en traducción de plugins y themes de WordPress y otras cuestiones que vengan hechos para ser traducidos">Poedit</a> se podría arreglar todo bonito rápidamente. <a href="https://github.com/imathis/octopress/issues/451" title="Issue de un alemán que quiere traducir su instalación de Octopress">Hace 17 días</a> se dijo que no va a ir en una versión próxima, ASÍ QUE NO IMPORTA, TOTAL IGUAL SE PUEDE METER MANO A TODO Y ESPERAR QUE NO EXPLOTE.</p>

<h3>Cosas bacanes</h3>

<ul>
<li>Es <em>responsive</em> (¡Eeeeeeeh!).</li>
<li>Es fácil entender cómo funciona y qué crea al regenerarse con los últimos cambios aplicados.</li>
<li>Los <em>widgets</em> que trae son fáciles de activar y configurar.</li>
<li>Configurar el dominio no fue tan complejo, sólo tuve que usar <a href="http://www.heroku.com/" title="Hosting de aplicaciones muy bonito y simpático">Heroku</a>, creando la aplicación desde el Terminal, <a href="http://octopress.org/docs/deploying/heroku/">como te indican en la documentación</a> y en <a href="https://devcenter.heroku.com/articles/custom-domains">la documentación de Heroku</a> está la explicación para que el dominio apunte para allá y todo se vea profesionalmente bacán.</li>
</ul>


<h3>Cosas que le faltan (o <em>no bacanes</em>)</h3>

<ul>
<li>¿Podría tener una imagen destacada por cada post? No encontré que se abordara el tema en lo básico.</li>
<li>No me gustó que lo de los tags no viniera activado por defecto. Espero que no sea tan difícil de aplicar/configurar.</li>
<li>ESONOMÁS.</li>
</ul>


<h2>Cambios agregaos a la mala</h2>

<ul>
<li>Traducir detalles en <code>source/_layouts/post.html</code>. Con eso ahora dice «Comentarios», «Escrito por» y… otras cosas.</li>
<li>Crear el <code>twitter.html</code> en <code>asides</code> para insertar los últimos tuiteos.</li>
<li>Creación de <code>tags.html</code> en <code>source/_includes/post/</code> para llamar a los tags incluidos en el <code>.markdown</code> del post, aunque todavía no enlazan como las categorías. <strong>Falta esfuerzo</strong>.</li>
<li>En <code>source/_includes/custom/navigation.html</code> está el menú principal. Traduje los enlaces que habían y le agregué mi Twitter, porsiaca.</li>
</ul>

]]></content>
  </entry>
  
</feed>
