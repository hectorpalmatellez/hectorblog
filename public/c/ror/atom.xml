<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ror | Héctor Palma Téllez]]></title>
  <link href="http://hector.palmatellez.cl/c/ror/atom.xml" rel="self"/>
  <link href="http://hector.palmatellez.cl/"/>
  <updated>2014-03-23T02:22:35-03:00</updated>
  <id>http://hector.palmatellez.cl/</id>
  <author>
    <name><![CDATA[Héctor Palma Téllez]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Usar Gmail para que Devise en Rails envíe correos]]></title>
    <link href="http://hector.palmatellez.cl/ror/rails-mails-gmail/"/>
    <updated>2013-09-07T12:41:00-03:00</updated>
    <id>http://hector.palmatellez.cl/ror/rails-mails-gmail</id>
    <content type="html"><![CDATA[<p><img class="left" src="/images/development.rb-mailer-gmail.png" width="400"> Estuve buscando una solución simple para crear un sistema que funcione bien y no tan complejo de entender en una aplicación hecha en <strong>Ruby on Rails</strong>, así es como llegué a <code>devise</code>. Esta parece tener un nivel alto de aceptación, aunque no tiene actualizaciones hace harto rato. Obvio que saltan problemas y soluciones pre-armadas, como lo que pasa cuando olvidas tu contraseña y deseas re-crearla. <code>devise</code> ya trae todas las <em>views</em> que uno podría necesitar (en <code>app/views/devise/</code>, si hiciste <code>$ rails generate devise:views</code>).</p>

<!-- more -->


<h2>«Todo está listo, pero no»</h2>

<p>Sin problema pude generar el sistema de registro y logueo, un par de comandos y listo. Casi <em>a prueba de tontos</em>. Luego vino la parte donde me pregunté sobre el botón de <strong>Recuperar Contraseña</strong>, porque las <code>views</code> lo incluyen, lo probé y no funcionó :(</p>

<h3>Recuperar contraseña con <code>devise</code></h3>

<p>La vista está en <code>app/views/devise/passwords/new.html.erb</code> y casi no hay que tocar nada. Yo traduje un par de cuestiones nomás, aunque hay cosas que se traducen usando el <a href="" title="https://github.com/plataformatec/devise/wiki/I18n">i18n de devise</a>.</p>

<p>En <code>config/environments/development.rb</code> van los datos que se usan para acceder a Gmail, utilizando los datos de acceso (la primera imagen de este post). Para que funcionase en local (obvio, porque es <code>development.rb</code>). De acuerdo a la teoría que busqué, era posible no tener que poner la información en texto plano explícito en ese archivo, usando <em>environmental variables</em>, como dice <a href="http://stevechristie.tumblr.com/post/35158776548/how-to-set-up-local-environmental-variables">Old Man Coder</a>, sin embargo, me fue más fácil que funcionara en Heroku (<code>production.rb</code>), que en el local. Pa' qué darle tanta vuelta, si la cosa anda.</p>

<p>El de producción queda así:</p>

<pre><code>config.action_mailer.smtp_settings = {
    address: "smtp.gmail.com",
    port: 587,
    domain: ENV["GMAIL_DOMAIN"],
    authentication: "plain",
    enable_starttls_auto: true,
    user_name: ENV["GMAIL_USERNAME"],
    password: ENV["GMAIL_PASSWORD"]
}
</code></pre>

<p>Algo útil es que no necesariamente tiene que ser un correo <em>@gmail.com</em>, ya que yo probé con uno que utiliza Google Apps y anda súper igual.</p>

<h2>Crear <em>environmental variables</em> para Heroku</h2>

<p><strong>Heroku</strong> lo explica súper bien en <a href="" title="https://devcenter.heroku.com/articles/config-vars">su Devcenter</a>, pero el paso exacto dado por mí fue el siguiente:</p>

<pre><code>heroku config:add GMAIL_USERNAME=CORREO@GMAIL.COM GMAIL_DOMAIN=gmail.com GMAIL_PASSWORD=CONTRASEÑA
</code></pre>

<p>Se explica solito.</p>

<h2>Ya, ¿y?</h2>

<p>Después de esos pasos, falta revisar que nuestro <code>production.rb</code> tenga lo siguiente:</p>

<pre><code>config.action_mailer.default_url_options = { :host =&gt; 'http://APP.herokuapp.com' }
config.action_mailer.delivery_method = :smtp
config.action_mailer.smtp_settings = {
    address: "smtp.gmail.com",
    port: 587,
    domain: ENV["GMAIL_DOMAIN"],
    authentication: "plain",
    enable_starttls_auto: true,
    user_name: ENV["GMAIL_USERNAME"],
    password: ENV["GMAIL_PASSWORD"]
}
</code></pre>

<p>En la primera debe ir el nombre con la URL de tu aplicación. Si utilizas un dominio asignado, sin el <code>herokuapp.com</code>, debe ir ese dominio ahí.</p>

<p>Con eso ya debería funcionar todo. Gracias a Google y a todos los amiguitos que lo hicieron posible n.n</p>
]]></content>
  </entry>
  
</feed>
