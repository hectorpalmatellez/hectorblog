<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: rails | H√©ctor Palma T√©llez]]></title>
  <link href="http://hector.palmatellez.cl/c/rails/atom.xml" rel="self"/>
  <link href="http://hector.palmatellez.cl/"/>
  <updated>2015-07-11T21:36:08-03:00</updated>
  <id>http://hector.palmatellez.cl/</id>
  <author>
    <name><![CDATA[H√©ctor Palma T√©llez]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[C√≥mo usar Rails desde Koding]]></title>
    <link href="http://hector.palmatellez.cl/rails/como-usar-rails-desde-koding/"/>
    <updated>2015-07-11T15:07:00-03:00</updated>
    <id>http://hector.palmatellez.cl/rails/como-usar-rails-desde-koding</id>
    <content type="html"><![CDATA[<p><img class="left" src="/images/koding/create-vm.png" width="350" title="&#34;Crear VM&#34;" alt="&#34;Crear VM&#34;"> El problema inicial era c√≥mo lograr instalar un entorno com√∫n de trabajo similar al que uno recrea en un Mac, pero desde Windows. Record√© que <a href="http://koding.com/">Koding</a> ofrece una <em>VM</em> gratis y se me ocurri√≥ que podr√≠a funcionar, entonces algo as√≠ tuve que hacer:</p>

<!-- more -->


<p>En el plan gratuito de Koding se tiene libertad para instalar todo lo necesario. El tipo de aplicaci√≥n a instalar demanda, adem√°s de Rails, tener instalado <a href="http://www.postgresql.org/">PostgreSQL</a>, que tambi√©n coincide con ser lo gratuito que se puede tener en una aplicaci√≥n en Heroku.</p>

<p><img src="/images/koding/create-new-vm.png" title="&#34;Crear nueva VM&#34;" alt="&#34;Crear nueva VM&#34;"></p>

<h4>1. Instalar PostgreSQL</h4>

<p>Koding tiene un manejador propio de paquetes, a prueba de tontos, por lo que instalar PostgreSQL es s√∫per simple:</p>

<p><code>$ kpm install postgresql</code></p>

<h4>2. Instalar Ruby y Rails</h4>

<p>La VM en Koding ya trae Ruby instalado, pero, ya que utilizaremos una versi√≥n m√°s actual de Rails, es necesario actualizarla, los pasos para esto son:</p>

<p><code>$ gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3</code></p>

<p>Luego:</p>

<p><code>$ curl -sSL https://get.rvm.io | bash -s stable --rails</code> (este se demora un poco m√°s que los otros).</p>

<p>Al terminar:</p>

<p><code>$ source ~/.rvm/scripts/rvm</code> para actualizar lo instalado.</p>

<p><img src="/images/koding/ruby-rails-installed.png" title="&#34;Ruby y Rails instalado&#34;" alt="&#34;Ruby y Rails instalado&#34;"></p>

<h4>3. Configurar Git</h4>

<p>El proyecto en Rails ya est√° alojado en GitHub, por lo que parte de lo pensado es realizar cambios y hacer <em>commits</em> desde Koding. Para identificarse en GitHub se utilizan los pasos que ellos detallan en <a href="https://help.github.com/articles/generating-ssh-keys/">Generating SSH Keys</a>, pero en resumen, para este caso es:</p>

<p><code>$ ssh-keygen -t rsa -b 4096 -C "your_email@example.com"</code> (con el correo reemplazado, obviamente).</p>

<p>Esto generar√° dos archivos dentro de la VM: <code>~/.ssh/id_rsa</code> y <code>~/.ssh/id_rsa.pub</code>. Luego, se debe copiar el contenido de <code>id_rsa.pub</code> y guardarlo dentro de las SSH Keys autorizadas en tu propia cuenta de GitHub., estas est√°n en: <a href="https://github.com/settings/ssh">https://github.com/settings/ssh</a>. Para copiar el contenido de este archivo, se puede hacer: <code>$ cat ~/.ssh/id_rsa.pub</code> y copiar este contenido en el portapapeles.
Luego ir a las SSH Keys del perfil de GitHub y pegar este contenido guard√°ndolo con un nombre que lo identifique.
Para probar si el proceso qued√≥ bien, se puede ejecutar: <code>$ ssh -T git@github.com</code>. Primero, pedir√° permiso si se acepta agregar esa llave a la lista de <em>known hosts</em>, luego devolver√° el nombre de usuario en un mensaje, con eso queda ya confirmada la conexi√≥n entre la VM y el usuario de GitHub.</p>

<p><img src="/images/koding/add-ssh-key.png" title="&#34;Agregar Key a GitHub&#34;" alt="&#34;Agregar Key a GitHub&#34;"></p>

<h4>4. Clonar el repositorio</h4>

<p>Para clonar el repositorio, hay que ir a <code>~/Web</code> y hacer <code>$ git clone [URL DEL REPOSITORIO] .</code> (con un punto al final, para que quede el repositorio en la misma carpeta y no en una con el nombre del repositorio). Lo m√°s posible es que Git imprima este error: <code>fatal: destination path '.' already exists and is not an empty directory.</code>, esto es porque Koding genera algunos archivos en <code>~/Web</code>, que es la ra√≠z para lo que se ve en el dominio "desde afuera", por lo que un <code>$ rm *</code> y repetir el comando de clonaci√≥n del repositorio ser√° suficiente üëå</p>

<h4>5. Rails Server</h4>

<p>Koding siempre quedar√° como un entorno de desarrollo, por lo que uno normalmente ahora har√≠a <code>$ rails s</code> para ver qu√© tal est√° el repositorio. Oh, cierto, falta el <code>$ bundle install</code>...
En caso de existir un error con la instalaci√≥n de la gema <code>pg</code>, es necesario instalar una librer√≠a adicional con este comando: <code>$ sudo apt-get install libpq-dev</code>.
Luego de esto, ya ser√° posible <code>$ bundle install</code> y <code>$ rails s</code>, sin embargo, para asegurar poder ver la VM p√∫blicamente, el comando debe ser <code>$ rails s -b 0.0.0.0</code>, con esto ya puede ser visto por cualquier persona, utilizando la IP p√∫blica que aparece en las <em>VM Settings</em> m√°s el puerto por defecto que es normalmente el <code>3000</code>.
Al intentarlo, probablemente aparezca un error relacionado con PostgreSQL.</p>

<h4>6. √öltimos detalles</h4>

<p>Lo que falta configurar en PostgreSQL es el role con el nombre del usuario de Koding.</p>

<ol>
<li><code>sudo su - postgres</code></li>
<li><code>psql template1</code></li>
<li><code>CREATE ROLE [username] superuser;</code></li>
<li><code>ALTER ROLE username WITH LOGIN;</code></li>
</ol>


<p>Luego de esto, es necesario recrear la base de datos con <code>$ bundle exec rake rake db:create:all</code> y luego <code>bundle exec rake db:migrate</code>.</p>

<h4>7. Termin√≥</h4>

<p>Luego de todos estos pasos, ya debe poder verse en la IP p√∫blica el servidor local. Los archivos se pueden editar a trav√©s de Koding y se pueden realizar commits con el usuario ya logueado.</p>

<p>Ahora, todo est√° controlado.</p>

<p><img src="http://media2.giphy.com/media/OCdsZb1Er6aeQ/giphy.gif" alt="Todo bajo control" /></p>
]]></content>
  </entry>
  
</feed>
